@page "/nuevo"
@inject NavigationManager Nav
@inject IEmpleadoApiService empleadosService
<h2>Nuevo empleado</h2>

<div class="form-group">
    <label>Nombre:</label>
    <input type="text" class="form-control" @bind="nuevoEmpleado.Nombre" />
</div>

<div class="form-group">
    <label>Apellido:</label>
    <input type="text" class="form-control" @bind="nuevoEmpleado.Apellido" />
</div>

<div class="form-group">
    <label>Estado:</label>
    <select class="form-control" @bind="nuevoEmpleado.Estado">
        <option value="">-- Seleccionar --</option>
        @foreach (EstadoEmpleado estado in Enum.GetValues(typeof(EstadoEmpleado)))
        {
            <option value="@estado">@estado</option>
        }
    </select>
</div>
<button type="button" class="btn btn-primary" @onclick="GuardarEmpleado">Guardar</button>
<p><strong>Debug:</strong> @nuevoEmpleado.Nombre - @nuevoEmpleado.Apellido - @nuevoEmpleado.Estado</p>
@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="alert alert-info mt-3">@mensaje</div>
}

@code {
    Empleado nuevoEmpleado = new();
    string mensaje;

    private async Task GuardarEmpleado()
    {
        try
        {
            await empleadosService.EnviarEmpleadoAsync(nuevoEmpleado);
            mensaje = "Empleado guardado correctamente.";
            // Nav.NavigateTo("/");
        }
        catch (Exception ex)
        {
            mensaje = $"Error al guardar: {ex.Message}";
        }
        Console.WriteLine($"Guardando: {nuevoEmpleado.Nombre} {nuevoEmpleado.Apellido} ({nuevoEmpleado.Estado})");

    }
}
