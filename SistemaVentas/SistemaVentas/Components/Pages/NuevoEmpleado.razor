@page "/nuevo"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Nav

<h2>Nuevo empleado</h2>

<EditForm Model="@nuevoEmpleado" OnValidSubmit="GuardarEmpleado">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Nombre:</label>
        <input class="form-control @(string.IsNullOrWhiteSpace(nuevoEmpleado.Nombre) ? "is-invalid" : "")" />
        <ValidationMessage For="@(() => nuevoEmpleado.Nombre)" />
    </div>

    <div class="form-group">
        <label>Apellido:</label>
        <input class="form-control @(string.IsNullOrWhiteSpace(nuevoEmpleado.Apellido) ? "is-invalid" : "")" />  
        <ValidationMessage For="@(() => nuevoEmpleado.Apellido)" />
    </div>

    <div class="form-group">
        <label>Estado:</label>
        <InputSelect @bind-Value="nuevoEmpleado.Estado" class="form-control">
            <option value="">-- Seleccionar --</option>
            @foreach (EstadoEmpleado estado in Enum.GetValues(typeof(EstadoEmpleado)))
            {
                <option value="@estado">@estado</option>
            }
        </InputSelect>

        <ValidationMessage For="@(() => nuevoEmpleado.Estado)" />
    </div>

    <button type="submit" class="btn-guardar">Guardar</button>
</EditForm>

@code {
  
    Empleado nuevoEmpleado = new();

    void GuardarEmpleado()
    {
        // Aquí podrías guardar en base de datos o pasar a otro componente

        Console.WriteLine($"Empleado guardado: {nuevoEmpleado.Nombre} {nuevoEmpleado.Apellido} ({nuevoEmpleado.Estado})");
        Nav.NavigateTo("/");
    }
}
